[2024-06-21 13:19:37,668: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 13:19:37,668: ERROR: stage_01_data_ingestion: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_01_data_ingestion.py", line 31, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_01_data_ingestion.py", line 18, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 17, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-21 13:49:21,784: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 13:49:21,802: ERROR: stage_01_data_ingestion: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_01_data_ingestion.py", line 31, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_01_data_ingestion.py", line 18, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 22, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-21 13:52:53,173: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 13:52:53,220: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-21 13:52:53,221: ERROR: stage_01_data_ingestion: [Errno 2] No such file or directory: 'params.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_01_data_ingestion.py", line 21, in main
    config = ConfigurationManager(config_filepath)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.params = read_yaml(params_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'params.yaml'
[2024-06-21 14:03:08,503: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 14:03:08,504: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-21 14:03:08,505: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-21 14:03:08,505: INFO: common: created directory at: artifacts]
[2024-06-21 14:03:08,506: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-21 14:03:08,506: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:03:25,960: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:03:28,754: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-21 14:08:24,428: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 14:08:24,429: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-21 14:08:24,430: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-21 14:08:24,431: INFO: common: created directory at: artifacts]
[2024-06-21 14:08:24,448: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-21 14:08:24,448: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:08:42,599: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:08:47,557: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-21 14:13:56,718: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-21 14:13:56,719: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-21 14:13:56,720: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-21 14:13:56,721: INFO: common: created directory at: artifacts]
[2024-06-21 14:13:56,721: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-21 14:13:56,722: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:14:13,896: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-21 14:14:17,858: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-22 13:25:57,064: INFO: stage_02_prepare_base_model: *******************]
[2024-06-22 13:25:57,073: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-22 13:25:57,073: ERROR: stage_02_prepare_base_model: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_02_prepare_base_model.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_02_prepare_base_model.py", line 19, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-23 11:50:37,715: INFO: stage_02_prepare_base_model: *******************]
[2024-06-23 11:50:37,721: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-23 11:50:37,722: ERROR: stage_02_prepare_base_model: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_02_prepare_base_model.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_02_prepare_base_model.py", line 19, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-23 11:55:25,189: INFO: stage_02_prepare_base_model: *******************]
[2024-06-23 11:55:25,197: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-23 11:55:25,254: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-23 11:55:25,266: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-23 11:55:25,295: INFO: common: created directory at: artifacts]
[2024-06-23 11:55:25,296: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-23 11:55:26,330: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 11:55:26,727: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 11:55:26,884: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-23 12:03:59,857: INFO: stage_02_prepare_base_model: *******************]
[2024-06-23 12:03:59,858: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-23 12:03:59,860: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-23 12:03:59,861: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-23 12:03:59,862: INFO: common: created directory at: artifacts]
[2024-06-23 12:03:59,862: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-23 12:04:00,193: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 12:04:00,359: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 12:04:00,555: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-23 12:08:44,753: INFO: stage_02_prepare_base_model: *******************]
[2024-06-23 12:08:44,754: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-23 12:08:44,756: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-23 12:08:44,757: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-23 12:08:44,758: INFO: common: created directory at: artifacts]
[2024-06-23 12:08:44,758: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-23 12:08:45,086: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 12:08:45,264: WARNING: saving_api: You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. ]
[2024-06-23 12:08:45,331: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-24 01:04:07,097: INFO: stage_03_model_trainer: *******************]
[2024-06-24 01:04:07,108: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 01:04:07,109: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 34, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 20, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 01:06:41,064: INFO: stage_03_model_trainer: *******************]
[2024-06-24 01:06:41,064: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 01:06:41,064: ERROR: stage_03_model_trainer: Config file not found: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml]
[2024-06-24 01:06:41,064: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 44, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 33, in main
    raise e
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 24, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 01:16:58,871: INFO: stage_03_model_trainer: *******************]
[2024-06-24 01:16:58,871: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 01:16:58,871: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 02:32:23,959: INFO: stage_03_model_trainer: *******************]
[2024-06-24 02:32:23,965: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 02:32:23,965: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 02:53:16,867: INFO: stage_03_model_trainer: *******************]
[2024-06-24 02:53:16,874: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 02:53:16,874: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\cv projects\Deep Learning MLFlow and DVC\env\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 11:41:39,082: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 11:41:39,109: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 11:41:39,125: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 11:41:39,141: INFO: common: created directory at: artifacts]
[2024-06-24 11:41:39,142: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 11:41:39,142: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:41:58,226: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:41:59,917: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 11:45:10,297: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 11:45:10,299: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 11:45:10,300: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 11:45:10,300: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 11:45:10,301: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 11:45:10,301: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:45:28,281: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:45:30,294: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 11:47:23,431: INFO: stage_02_prepare_base_model: *******************]
[2024-06-24 11:47:23,432: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-24 11:47:23,434: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 11:47:23,435: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 11:47:23,436: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 11:47:23,436: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-24 11:47:26,274: WARNING: saving_utils: Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.]
[2024-06-24 11:47:26,644: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-24 11:55:51,651: INFO: stage_03_model_trainer: *******************]
[2024-06-24 11:55:53,811: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 11:55:53,811: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 11:59:01,573: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 11:59:01,581: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 11:59:01,581: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 11:59:01,582: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 11:59:01,607: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 11:59:01,607: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:59:19,791: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 11:59:21,705: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 12:06:39,901: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 12:06:39,902: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 12:06:39,903: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 12:06:39,904: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 12:06:39,904: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 12:06:39,904: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 12:06:55,828: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 12:06:57,271: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 12:11:42,611: INFO: stage_02_prepare_base_model: *******************]
[2024-06-24 12:11:42,612: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-24 12:11:42,613: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 12:11:42,615: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 12:11:42,615: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 12:11:42,616: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-24 12:11:43,432: WARNING: saving_utils: Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.]
[2024-06-24 12:11:43,643: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-24 12:14:00,897: INFO: stage_03_model_trainer: *******************]
[2024-06-24 12:14:00,898: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 12:14:00,899: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 12:32:16,265: INFO: stage_03_model_trainer: *******************]
[2024-06-24 12:32:16,265: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 12:32:16,265: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 12:47:46,635: INFO: stage_03_model_trainer: *******************]
[2024-06-24 12:47:46,635: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 12:47:47,110: ERROR: stage_03_model_trainer: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 24, in main
    training.train_valid_generator()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 49, in train_valid_generator
    self.valid_generator = valid_datagenerator.flow_from_directory(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 1648, in flow_from_directory
    return DirectoryIterator(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 563, in __init__
    for subdir in sorted(os.listdir(directory)):
                         ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data'
[2024-06-24 12:52:54,096: INFO: stage_03_model_trainer: *******************]
[2024-06-24 12:52:54,097: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 12:52:55,510: ERROR: stage_03_model_trainer: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data/']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 24, in main
    training.train_valid_generator()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 49, in train_valid_generator
    self.valid_generator = valid_datagenerator.flow_from_directory(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 1648, in flow_from_directory
    return DirectoryIterator(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 563, in __init__
    for subdir in sorted(os.listdir(directory)):
                         ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data/'
[2024-06-24 13:02:45,157: INFO: stage_03_model_trainer: *******************]
[2024-06-24 13:02:45,157: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 13:02:45,628: ERROR: stage_03_model_trainer: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 24, in main
    training.train_valid_generator()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 55, in train_valid_generator
    self.valid_generator = valid_datagenerator.flow_from_directory(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 1648, in flow_from_directory
    return DirectoryIterator(
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\preprocessing\image.py", line 563, in __init__
    for subdir in sorted(os.listdir(directory)):
                         ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [WinError 3] The system cannot find the path specified: 'e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_digestion/Data'
[2024-06-24 13:17:05,299: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 13:17:05,315: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 13:17:05,316: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 13:17:05,316: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 13:17:05,340: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 13:17:05,340: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:17:22,666: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:17:24,715: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 13:20:52,203: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 13:20:52,204: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 13:20:52,206: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 13:20:52,206: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 13:20:52,207: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 13:20:52,207: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:21:08,351: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:21:09,411: WARNING: data_ingestion: Source path artifacts/data_ingestion\train does not exist]
[2024-06-24 13:21:09,411: WARNING: data_ingestion: Source path artifacts/data_ingestion\test does not exist]
[2024-06-24 13:21:09,411: WARNING: data_ingestion: Source path artifacts/data_ingestion\valid does not exist]
[2024-06-24 13:21:09,411: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 13:27:25,896: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage started <<<<<<]
[2024-06-24 13:27:25,898: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 13:27:25,899: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 13:27:25,899: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 13:27:25,900: INFO: common: created directory at: artifacts/data_ingestion]
[2024-06-24 13:27:25,900: INFO: data_ingestion: Downloading data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:27:43,884: INFO: data_ingestion: Downloaded data from https://drive.google.com/file/d/1uoznzhp0uB0gOTIFkNIFm5Jiy7l3U716/view?usp=sharing into file artifacts/data_ingestion/data.zip]
[2024-06-24 13:27:45,800: INFO: data_ingestion: Copying from e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/train to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\train]
[2024-06-24 13:27:51,524: INFO: data_ingestion: Copied e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/train to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\train]
[2024-06-24 13:27:51,524: INFO: data_ingestion: Copying from e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/test to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\test]
[2024-06-24 13:27:54,025: INFO: data_ingestion: Copied e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/test to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\test]
[2024-06-24 13:27:54,026: INFO: data_ingestion: Copying from e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/valid to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\valid]
[2024-06-24 13:27:54,499: INFO: data_ingestion: Copied e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/data_ingestion/Data/valid to e:\cv projects\Deep Learning MLFlow and DVC\data\Data\valid]
[2024-06-24 13:27:54,499: INFO: stage_01_data_ingestion: >>>>>> stage Data Ingestion stage completed <<<<<<

x==========x]
[2024-06-24 13:35:34,856: INFO: stage_03_model_trainer: *******************]
[2024-06-24 13:35:34,856: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 13:35:34,881: ERROR: stage_03_model_trainer: No file or directory found at e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/prepare_base_model/updated_base_model.h5]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 23, in main
    training.get_base_model()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 35, in get_base_model
    self.model = tf.keras.models.load_model(self.config.updated_base_model_path)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\saving\saving_api.py", line 238, in load_model
    return legacy_sm_saving_lib.load_model(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\saving\legacy\save.py", line 234, in load_model
    raise IOError(
OSError: No file or directory found at e:/cv projects/Deep Learning MLFlow and DVC/src/cnnClassifier/pipeline/artifacts/prepare_base_model/updated_base_model.h5
[2024-06-24 13:38:02,442: INFO: stage_02_prepare_base_model: *******************]
[2024-06-24 13:38:02,443: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model started <<<<<<]
[2024-06-24 13:38:02,444: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\config\config.yaml loaded successfully]
[2024-06-24 13:38:02,445: INFO: common: yaml file: e:\cv projects\Deep Learning MLFlow and DVC\params.yaml loaded successfully]
[2024-06-24 13:38:02,446: INFO: common: created directory at: e:/cv projects/Deep Learning MLFlow and DVC/artifacts]
[2024-06-24 13:38:02,446: INFO: common: created directory at: artifacts/prepare_base_model]
[2024-06-24 13:38:03,324: WARNING: saving_utils: Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.]
[2024-06-24 13:38:03,633: INFO: stage_02_prepare_base_model: >>>>>> stage Prepare base model completed <<<<<<

x==========x]
[2024-06-24 13:38:27,358: INFO: stage_03_model_trainer: *******************]
[2024-06-24 13:38:27,358: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 13:38:37,495: ERROR: stage_03_model_trainer: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[32,2] labels_size=[32,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    except TypeError as e:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[32,2] labels_size=[32,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]
[2024-06-24 13:42:28,862: INFO: stage_03_model_trainer: *******************]
[2024-06-24 13:42:28,862: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 13:42:32,420: ERROR: stage_03_model_trainer: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 94, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 94, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    except TypeError as e:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 94, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]
[2024-06-24 13:46:39,690: INFO: stage_03_model_trainer: *******************]
[2024-06-24 13:46:39,691: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 13:46:43,587: ERROR: stage_03_model_trainer: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 98, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_1384]]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 98, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    except TypeError as e:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 98, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_1384]
[2024-06-24 14:07:07,612: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:07:07,642: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:07:07,642: ERROR: stage_03_model_trainer: [Errno 2] No such file or directory: 'config\\config.yaml']
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 35, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 21, in main
    config = ConfigurationManager()
             ^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\config\configuration.py", line 23, in __init__
    self.config = read_yaml(config_filepath)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\ensure\main.py", line 849, in __call__
    return_val = self.f(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^^^
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 37, in read_yaml
    raise e
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\utils\common.py", line 30, in read_yaml
    with open(path_to_yaml) as yaml_file:
         ^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'config\\config.yaml'
[2024-06-24 14:08:58,088: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:08:58,088: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:09:06,917: ERROR: stage_03_model_trainer: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    except TypeError as e:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 90, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]
[2024-06-24 14:16:34,267: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:16:34,267: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:16:39,267: ERROR: stage_03_model_trainer: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 92, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 92, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    except TypeError as e:
tensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:

Detected at node 'categorical_crossentropy/softmax_cross_entropy_with_logits' defined at (most recent call last):
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
      obj.main()
    File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
      training.train()
    File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 92, in train
      self.model.fit(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1742, in fit
      tmp_logs = self.train_function(iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function
      return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function
      outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step
      outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1081, in train_step
      loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1139, in compute_loss
      return self.compiled_loss(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\compile_utils.py", line 265, in __call__
      loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 142, in __call__
      losses = call_fn(y_true, y_pred)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 268, in call
      return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\losses.py", line 2122, in categorical_crossentropy
      return backend.categorical_crossentropy(
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\backend.py", line 5566, in categorical_crossentropy
      return tf.nn.softmax_cross_entropy_with_logits(
Node: 'categorical_crossentropy/softmax_cross_entropy_with_logits'
logits and labels must be broadcastable: logits_size=[16,2] labels_size=[16,3]
	 [[{{node categorical_crossentropy/softmax_cross_entropy_with_logits}}]] [Op:__inference_train_function_882]
[2024-06-24 14:20:13,456: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:20:13,456: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:20:14,739: ERROR: stage_03_model_trainer: in user code:

    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1080, in train_step
        y_pred = self(x, training=True)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
        raise e.with_traceback(filtered_tb) from None
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\layers\core\dense.py", line 255, in call
        outputs = self.activation(outputs)

    TypeError: Exception encountered when calling layer 'dense' (type Dense).
    
    'str' object is not callable
    
    Call arguments received by layer 'dense' (type Dense):
      • inputs=tf.Tensor(shape=(None, None), dtype=float32)
]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 103, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Temp\__autograph_generated_file6nl5fl73.py", line 18, in tf__train_function
    raise
TypeError: in user code:

    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1080, in train_step
        y_pred = self(x, training=True)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
        raise e.with_traceback(filtered_tb) from None
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\layers\core\dense.py", line 255, in call
        outputs = self.activation(outputs)

    TypeError: Exception encountered when calling layer 'dense' (type Dense).
    
    'str' object is not callable
    
    Call arguments received by layer 'dense' (type Dense):
      • inputs=tf.Tensor(shape=(None, None), dtype=float32)

[2024-06-24 14:23:37,116: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:23:37,116: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:23:38,148: ERROR: stage_03_model_trainer: in user code:

    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1080, in train_step
        y_pred = self(x, training=True)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
        raise e.with_traceback(filtered_tb) from None
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\layers\core\dense.py", line 255, in call
        outputs = self.activation(outputs)

    TypeError: Exception encountered when calling layer 'dense' (type Dense).
    
    'str' object is not callable
    
    Call arguments received by layer 'dense' (type Dense):
      • inputs=tf.Tensor(shape=(None, None), dtype=float32)
]
Traceback (most recent call last):
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 32, in <module>
    obj.main()
  File "E:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\pipeline\stage_03_model_trainer.py", line 25, in main
    training.train()
  File "e:\cv projects\Deep Learning MLFlow and DVC\src\cnnClassifier\components\model_trainer.py", line 102, in train
    self.model.fit(
  File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\Sagnik\AppData\Local\Temp\__autograph_generated_filekd8q2eyy.py", line 18, in tf__train_function
    raise
TypeError: in user code:

    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1338, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1322, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1303, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\engine\training.py", line 1080, in train_step
        y_pred = self(x, training=True)
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\utils\traceback_utils.py", line 70, in error_handler
        raise e.with_traceback(filtered_tb) from None
    File "C:\Users\Sagnik\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\layers\core\dense.py", line 255, in call
        outputs = self.activation(outputs)

    TypeError: Exception encountered when calling layer 'dense' (type Dense).
    
    'str' object is not callable
    
    Call arguments received by layer 'dense' (type Dense):
      • inputs=tf.Tensor(shape=(None, None), dtype=float32)

[2024-06-24 14:25:50,749: INFO: stage_03_model_trainer: *******************]
[2024-06-24 14:25:50,749: INFO: stage_03_model_trainer: >>>>>> stage Training started <<<<<<]
[2024-06-24 14:27:42,466: INFO: stage_03_model_trainer: >>>>>> stage Training completed <<<<<<

x==========x]
